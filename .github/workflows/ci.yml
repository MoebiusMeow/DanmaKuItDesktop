name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  mingw:
    name: Windows MinGW
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Install Qt
        shell: pwsh
        run: |
          pip install aqtinstall==2.0.5
          aqt install-qt windows desktop 6.2.2 win64_mingw -m qtwebsockets -O ./Qt
          aqt install-tool windows desktop tools_mingw90 qt.tools.win64_mingw900 -O ./Qt
          Convert-Path ./Qt/6.2.2/mingw_64/bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Convert-Path ./Qt/Tools/mingw900_64/bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Where is qmake & Where is mingw32-make
        shell: pwsh
        run: |
          Get-Command -Name 'qmake' | Format-List
          Get-Command -Name 'mingw32-make' | Format-List

      - name: Build & Package
        shell: pwsh
        run: |
          qmake
          mingw32-make
          $targetName = DanmaKuItDesktop.exe
          $archiveName = DanmaKuItDesktop_MinGW900
          New-Item -ItemType Directory $archiveName
          Copy-Item bin/release/$targetName $archiveName/
          windeployqt --qmldir . --plugindir $archiveName/plugins --no-translations --compiler-runtime $archiveName/$targetName
          $removeList = @('*.qmlc', '*.ilk', '*.exp', '*.lib', '*.pdb')
          Get-ChildItem -Path $archiveName -Include $removeList -Recurse | Remove-Item
          Compress-Archive -Path $archiveName $archiveName'.zip'
          echo '::set-output name=packageName::$archiveName'
      
      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true