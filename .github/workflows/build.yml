name: build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches: [fix-ci] # should change back to master

jobs:
  mingw:
    name: Windows MinGW
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
      
      - name: Install Qt
        shell: pwsh
        run: |
          pip install aqtinstall==2.0.5
          aqt install-qt windows desktop 6.2.2 win64_mingw -m qtwebsockets -O ./Qt
          aqt install-tool windows desktop tools_mingw90 qt.tools.win64_mingw900 -O ./Qt
          Convert-Path ./Qt/6.2.2/mingw_64/bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Convert-Path ./Qt/Tools/mingw900_64/bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Where is cmake & Where is mingw32-make
        shell: pwsh
        run: |
          Get-Command -Name 'cmake' | Format-List
          Get-Command -Name 'mingw32-make' | Format-List

      - name: Build
        shell: pwsh
        run: |
          cmake . -G"MinGW Makefiles"
          mingw32-make
      
      - name: Package
        shell: pwsh
        run: |
          $targetName = 'DanmaKuItDesktop.exe'
          $archiveName = 'DanmaKuItDesktop_MinGW900'
          New-Item -ItemType Directory $archiveName
          Copy-Item $targetName $archiveName/
          windeployqt --qmldir . --plugindir $archiveName/plugins --no-translations --compiler-runtime $archiveName/$targetName
          Compress-Archive -Path $archiveName $archiveName'.zip'
          echo "::set-output name=packageName::$archiveName"
        id: package

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ steps.short-sha.outputs.sha }}
          overwrite: true

  msvc2019:
    name: Windows MSVC2019
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha

      - name: Install Qt
        shell: pwsh
        run: |
          pip install aqtinstall==2.0.5
          aqt install-qt windows desktop 6.2.2 win64_msvc2019_64 -m qtwebsockets -O ./Qt
          Convert-Path ./Qt/6.2.2/msvc2019_64/bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          cmake .
          cmake --build .
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Package
        shell: pwsh
        run: |
          $targetName = 'DanmaKuItDesktop.exe'
          $archiveName = 'DanmaKuItDesktop_MSVC2019'
          New-Item -ItemType Directory $archiveName
          Copy-Item $targetName $archiveName/
          windeployqt --qmldir . --plugindir $archiveName/plugins --no-translations --compiler-runtime $archiveName/$targetName
          $redistDll='{0}x64/*.CRT/*.dll' -f $env:vcToolsRedistDir.Trim()
          Copy-Item $redistDll $archiveName/
          $sdkDll='{0}Redist/{1}ucrt/DLLs/x64/*.dll' -f $env:winSdkDir.Trim(), $env:winSdkVer.Trim()
          Copy-Item $sdkDll $archiveName/
          Compress-Archive -Path $archiveName $archiveName'.zip'
          echo "::set-output name=packageName::$archiveName"
        id: package

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ steps.short-sha.outputs.sha }}
          overwrite: true
